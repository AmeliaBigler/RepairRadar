const nodemailer = require("nodemailer");
const mailgen = require("mailgen");


const signup = async (req, res) => {

    try {
        //Set up the config for nodemailer
        let config = {
            service: "gmail",
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASSWORD
            }
        };

        //Set up the transporter to send the messages
        let transporter = nodemailer.createTransport(config);

        //Initialize mailgen
        let mailGenerator = new mailgen({
            theme: "salted",
            product: {
                name: "MechanicMatchmaker",
                //TODO: Add the link to the deployed site
                link: "https://damp-oasis-29946.herokuapp.com"
            }
        });

        //Set up the response
        let response = {
            body: {
                name: req.body.username,
                intro: "Welcome to MechanicMatchmaker! We're happy to have you!",
                action: {
                    instructions: "To go to your dashboard, click below!",
                    button: {
                        text: "Go to dashboard",
                        //TODO: Add link to dashboard on the deployed site
                        link: "https://damp-oasis-29946.herokuapp.com/dashboard"
                    }
                },
                outro: "This is an autogenerated email from an unmonitored email inbox. Please do not reply to this email"
            }
        };

        //Autogenerate the html and plain text from the response
        let mail = mailGenerator.generate(response);
        let mailtext = mailGenerator.generatePlaintext(response);

        //Send the emil
        transporter.sendMail({
            from: `Mechcanic Matchmaker <${process.env.EMAIL_USER}>`,
            to: req.body.email,
            subject: "Account Created",
            text: mailtext,
            html: mail
        }).then(() => {
            //If no errors, close the response
            return res.status(201).json("Sent");
        });
    } catch (error) {
        res.status(500).json(error);
    }
}

//Send a post request with the bidders info and the users info

const winnerBid = async (req, res, table, ticketData) => {
    try {
        //Find the mechanic who won the bid
        const mechanicData = await table.findByPk(req.body.mechanicId);

        //Get the data from the table
        const mechanic = await mechanicData.get({ plain: true });

        //Set up the nodemailer
        let config = {
            service: "gmail",
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASSWORD
            }
        };

        //Initialize nodemailer
        let transporter = nodemailer.createTransport(config);

        //Initialize mailgen
        let mailGenerator = new mailgen({
            theme: "salted",
            product: {
                name: "MechanicMatchmaker",
                //TODO: Add the link to the deployed site
                link: "https://damp-oasis-29946.herokuapp.com"
            }
        });

        //Make the email
        let response = {
            body: {
                name: mechanic.username,
                intro: "You've won! One of the tickets you've bid on has delcared you the winner!",
                action: {
                    instructions: "View your dashboard by clicking on the link below",
                    //TODO: Add the link to the finished dashboard
                    link: "https://damp-oasis-29946.herokuapp.com/dashboard"
                },
                outro: "This is an autogenerated email from an unmonitored email inbox. Please do not reply to this email"
            }
        };

        let mail = mailGenerator.generate(response);
        let mailtext = mailGenerator.generatePlaintext(response);

        transporter.sendMail({
            from: `Mechanic Matchmaker <${process.env.EMAIL_USER}>`,
            to: mechanic.email,
            subject: "Bid Winner!",
            text: mailtext,
            html: mail
        }).then(() => {
            res.render("ticket", ticketData);
        })
    } catch (error) {
        res.status(500).json(error);
    }
}

module.exports = { signup: signup, winnerBid: winnerBid };